# Enable zprof profiling to measure startup time
# zmodload zsh/zprof

# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Add in zsh plugins
zinit light-mode for zdharma-continuum/zinit-annex-bin-gem-node
zinit pack for fzf
zinit pack for pyenv
zinit light Aloxaf/fzf-tab
zinit light jeffreytse/zsh-vi-mode

zinit wait lucid for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
 blockf \
    zsh-users/zsh-completions \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

# Add in snippets
zinit snippet OMZP::sudo
zinit snippet OMZP::archlinux
zinit snippet OMZP::aws
zinit snippet OMZP::kubectl
zinit snippet OMZP::kubectx
zinit snippet OMZP::command-not-found

# Load completions (only call compinit once, after plugins)
autoload -Uz compinit && compinit -C  # Use -C to speed up by using cache

zinit cdreplay -q

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Defaults
export EDITOR=nvim
export BROWSER=firefox
export TERM=xterm-kitty

# Keybindings
zinit ice depth=1

export XDG_CONFIG_HOME="$HOME/.config"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

export MANPAGER="nvim +Man!"

TMUX_DIR="~/.config/tmux"
if [ "$TMUX" = "" ]; then tmux attach-session; fi

# Enable command auto-correction.
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Import private exports that shouldn't be committed
PRIVEXPORTFILE=~/.zshrcpriv
source $PRIVEXPORTFILE

# Add path
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export PATH="$HOME/neovim/bin:$PATH"
export PATH="$HOME/.local/share/bob/nvim-bin:$PATH"
export PATH=$PATH:$HOME/bin
export PATH=~/.local/bin:$PATH
export PATH=$PATH:/usr/local/go/bin
export PATH="$PATH:$HOME/.cargo/bin"
export PATH="$PATH:$GOPATH/bin"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export STARSHIP_CONFIG=~/.config/starship/starship.toml

. "$HOME/.atuin/bin/env"

# Shell integrations
eval "$(zoxide init zsh)"
eval "$(atuin init zsh)"
eval "$(~/.local/bin/mise activate zsh)"
# Use oh-my-posh
# eval "$(oh-my-posh init zsh --config ~/.config/oh-my-posh/negligible-custom.omp.toml)"
eval "$(starship init zsh)"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init - --path --no-rehash zsh)"
fi

# zsh-vi-mode
ZVM_VI_ESCAPE_BINDKEY=jk
ZVM_VI_INSERT_ESCAPE_BINDKEY=$ZVM_VI_ESCAPE_BINDKEY
ZVM_VI_VISUAL_ESCAPE_BINDKEY=$ZVM_VI_ESCAPE_BINDKEY
ZVM_VI_OPPEND_ESCAPE_BINDKEY=$ZVM_VI_ESCAPE_BINDKEY

function zvm_after_lazy_keybindings() {
  # Remap to go to the beginning of the line
  zvm_bindkey vicmd 'gh' beginning-of-line
  # Remap to go to the end of the line
  zvm_bindkey vicmd 'gl' end-of-line
}

if [ "$(uname)" = "Darwin" ]; then
  export PATH="/opt/homebrew/opt/awscli@1/bin:$PATH"

  # 15 is lowest setting on UI
  # 8 was too fast causing duplicate keystrokes
  # 10 i think this causes issues in bash cli when editing commands, not sure
  defaults write -g InitialKeyRepeat -int 12

  # 2 is lowest setting on UI
  defaults write -g KeyRepeat -int 2

  # allow holding key instead of mac default holding key to choose alternate key
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
fi

# WSL 2 specific settings.
# if grep -q "microsoft" /proc/version &>/dev/null; then
#
#   case "$(uname -s)" in
#
#     Linux)
#
#     # Used for linux when `host.docker.internal` doesn't work in docker-compose
#     export DOCKER_GATEWAY_HOST=$(hostname -i |awk '{print $1}')
#     ;;
#
#   esac
#
#   # Requires: https://sourceforge.net/projects/vcxsrv/ (or alternative)
#   export IP=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}')
#   # export DISPLAY=$IP:0.0
#   export ADDITIONAL_DOCKER_PARAMS="--env WAYLAND_DISPLAY --env XDG_RUNTIME_DIR --env PULSE_SERVER -v /tmp/.X11-unix:/tmp/.X11-unix -v /mnt/wslg:/mnt/wslg"
#   export LIBGL_ALWAYS_INDIRECT=0
#   export MESA_D3D12_DEFAULT_ADAPTER_NAME="NVIDIA"
#
#   # Automatically start dbus - https://nickymeuleman.netlify.app/blog/gui-on-wsl2-cypress
#   # sudo /etc/init.d/dbus start &> /dev/null
#
#   # https://dev.to/bowmanjd/install-docker-on-windows-wsl-without-docker-desktop-34m9
#   DOCKER_DISTRO=$(. ~/os-details; echo "$DISTRIBUTION_NAME")
#   DOCKER_DIR=/mnt/wsl/shared-docker
#   DOCKER_SOCK="$DOCKER_DIR/docker.sock"
#   export DOCKER_HOST="unix://$DOCKER_SOCK"
#   if [ ! -S "$DOCKER_SOCK" ]; then
#       mkdir -pm o=,ug=rwx "$DOCKER_DIR"
#       chgrp docker "$DOCKER_DIR"
#       /mnt/c/Windows/System32/wsl.exe -d $DOCKER_DISTRO sh -c "nohup sudo -b dockerd < /dev/null > $DOCKER_DIR/dockerd.log 2>&1"
#   fi
#
# fi

function zshalias()
{
  grep "^alias" ~/.zshrc > ~/.zshenv
}

# Print zprof profiling results at the end
# zprof
