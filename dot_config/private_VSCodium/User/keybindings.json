// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.navigateForward",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusPreviousGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusBelowGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusAboveGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusNextGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "space e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "editorTextFocus && neovim.mode == normal"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "l",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "shift+tab",
        "command": "-acceptAlternativeSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.ctrl-f",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "space",
        "command": "whichkey.show",
        "when": "neovim.mode == 'normal' && !inSearch && !inQuickOpen && !suggestWidgetVisible && !findInputFocussed && !replaceInputFocussed && !findWidgetVisible && !replaceActive && !searchViewletFocus && !searchInputBoxFocus && !replaceInputBoxFocus"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.acceptCursorTabSuggestion",
        "when": "suggestWidgetVisible && cpp.shouldAcceptTab"
    },
    {
        "key": "tab",
        "command": "-editor.action.acceptCursorTabSuggestion",
        "when": "cpp.shouldAcceptTab"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openLocalFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    }
]



